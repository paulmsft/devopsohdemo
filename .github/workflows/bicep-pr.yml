name: "PR - IaC (Bicep)"

# run on pr to main branch only
on:
  pull_request:
    branches:
      - main
    paths:
      - "iac/bicep/**"
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write


# Set envs
env:
  WORKDIR: "iac/bicep"
  # RESOURCES_PREFIX: "" # hardcoded or dynamic based on repo name
  # LOCATION: "" # hardcoded or get from secrets

# Set defaults for GitHub Actions runner
defaults:
  run:
    working-directory: "iac/bicep"

jobs:
  codequalitycheck:
    name: "Code Quality Check"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

      # Login to Azure with Service Principal
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Checks that all Bicep configuration files adhere to a canonical format
      - name: Bicep Lint
        uses: Azure/cli@v1
        with:
          inlineScript: az bicep build --file ${{ env.WORKDIR }}/main.bicep
        id: lint

      # Validate whether a template is valid at subscription scope
      - name: Bicep Validate
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az deployment sub validate \
              --name ${{ github.run_id }} \
              --template-file ${{ env.WORKDIR }}/main.bicep \
              --location "${{ secrets.LOCATION }}" \
              --parameters resourcesPrefix=${{ steps.resources_prefix.outputs.result }}
        id: validate
              
      - name: Update Pull Request
        uses: actions/github-script@v6.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Bicep Lint ðŸ–Œ\`${{ steps.lint.outcome }}\`
            #### Bicep Validation ðŸ¤–\`${{ steps.validate.outcome }}\`
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
